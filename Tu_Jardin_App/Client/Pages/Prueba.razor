@page "/prueba"
@inject IPlantService PlantService 
@inject NavigationManager NavigationManager
@implements IDisposable

<h3>Prueba</h3>

@if (PlantService.plants.Count == 0)
            {
<p>Loading...</p>
            }
            else
            {
<table class="table">
    <thead>
        <tr>
            <th>Nombre:</th>
            <th>Tipo:</th>
            <th>Fecha:</th>
            <th>Imagen:</th>
            <th>Responsable:</th>
            <th>Logros:</th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var planta in PlantService.plants)
        {
            <tr>
                
                <td>@planta.Name</td>
                <td>@planta.Type</td>
                <td>@planta.Seeddate</td>
                <td>@planta.Img</td>
                <td>@planta.Owner</td>
                <td>
                    <button class="btn btn-primary" @onclick="() => ShowPlant(planta.Id)"> Ver </button>
                </td>
                <td>
                    <button class="btn btn-primary" @onclick="() => UpdatePlant(planta.Id)"> Editar</button>
                </td>
                <td>
                    <button class="btn btn-primary" @onclick="() => DeletePlant(planta.Id)"> Borrar </button>
                </td>
            </tr>
        }


    </tbody>
</table>

<Prueba3 plant="plantToEdit"> </Prueba3>
            }

@code {        


    public Plant plantToEdit { get; set; } = new Plant();

    protected override async Task OnInitializedAsync()
    {
        await PlantService.GetPlants();
        PlantService.OnChange += StateHasChanged;

    }

    void ShowPlant(int id)
    {
        NavigationManager.NavigateTo($"/prueba/{id}");
    }

    void UpdatePlant(int id)
    {
        plantToEdit = PlantService.plants.Find(p => p.Id == id);
    }

    void DeletePlant(int id)
        {
        PlantService.DeletePlant(id);
        }

    public void Dispose()
    {
        PlantService.OnChange -= StateHasChanged;
    }
}
